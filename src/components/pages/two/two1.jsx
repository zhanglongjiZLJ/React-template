import React, { Component } from 'react';import {  BrowserRouter as Router,  Route,  Link} from 'react-router-dom'import 'antd/dist/antd.css';// import Button from 'antd/lib/button';import './App.css';import { Layout, Menu, Breadcrumb, Icon ,Tag } from 'antd';import { createStore } from 'redux';import Tagss from './tag/tag'const { SubMenu } = Menu;const { Header, Content, Sider } = Layout;function counter(state = 0, action) {  switch (action.type) {  case 'INCREMENT':    return state + 1;  case 'DECREMENT':    return state - 1;  default:    return state;  }}let store = createStore(counter);// 可以手动订阅更新，也可以事件绑定到视图层。store.subscribe(() =>  console.log(store.getState()));store.dispatch({ type: 'INCREMENT' });// 1store.dispatch({ type: 'INCREMENT' });// 2store.dispatch({ type: 'DECREMENT' });const Tags = () => (  <div>    <h2>       <Tag closable  afterClose={this.eventDefault}>Tag 2</Tag>    </h2>  </div>)const Home = () => (  <div>    <h2>首页</h2>      </div>)const About = () => (  <div>    < Tagss handleClickChild = {this.handleClickChild}/>  </div>)const Abouts = ({ match }) => (  <div>    <h3>{match.params.Id}</h3>  </div>)const preventDefault=(e)=> {  e.preventDefault();  console.log('Clicked! But prevent default.');}const Topics = ({ match }) => (  <div>    <h2>主题列表</h2>    <ul>      <li>        <Link to={`${match.url}/rendering`}>          使用 React 渲染        </Link>      </li>      <li>        <Link to={`${match.url}/components`}>          组件        </Link>      </li>      <li>        <Link to={`${match.url}/props-v-state`}>          属性 v. 状态        </Link>      </li>    </ul>    <Route path={`${match.url}/:Id`} component={Topic}/>    <Route exact path={match.url} render={() => (      <h3>请选择一个主题。</h3>    )}/>  </div>)const Topic = ({ match }) => (  <div>    <h3>{match.params.Id}</h3>  </div>)class App extends Component {  handleClickChild() {    console.log(this.state.tagMenu);  };  render() {    return (      <div className="App">        <Layout className="app-layout">          <Header className="header">            <div className="logo" />            <Menu              theme="dark"              mode="horizontal"              defaultSelectedKeys={['2']}              style={{ lineHeight: '64px' }}            >              <Menu.Item key="1">nav 1</Menu.Item>              <Menu.Item key="2">nav 2</Menu.Item>              <Menu.Item key="3">nav 3</Menu.Item>            </Menu>          </Header>          <Layout>            <Sider width={200} style={{ background: '#fff' }}>              <Menu                mode="inline"                defaultSelectedKeys={['1']}                defaultOpenKeys={['sub1']}                style={{ height: '100%', borderRight: 0 }}              >                <SubMenu key="sub1" title={<span><Icon type="user" />subnav 1</span>}>                  <Menu.Item key="1">option1</Menu.Item>                  <Menu.Item key="2">option2</Menu.Item>                  <Menu.Item key="3">option3</Menu.Item>                  <Menu.Item key="4">option4</Menu.Item>                </SubMenu>                <SubMenu key="sub2" title={<span><Icon type="laptop" />subnav 2</span>}>                  <Menu.Item key="5">option5</Menu.Item>                  <Menu.Item key="6">option6</Menu.Item>                  <Menu.Item key="7">option7</Menu.Item>                  <Menu.Item key="8">option8</Menu.Item>                </SubMenu>                <SubMenu key="sub3" title={<span><Icon type="notification" />subnav 3</span>}>                  <Menu.Item key="9">option9</Menu.Item>                  <Menu.Item key="10">option10</Menu.Item>                  <Menu.Item key="11">option11</Menu.Item>                  <Menu.Item key="12">option12</Menu.Item>                </SubMenu>              </Menu>            </Sider>            <Layout style={{ padding: '0 24px 24px' }}>              <Breadcrumb style={{ margin: '16px 0' }}>                <Breadcrumb.Item>Home</Breadcrumb.Item>                <Breadcrumb.Item>List</Breadcrumb.Item>                <Breadcrumb.Item>App</Breadcrumb.Item>              </Breadcrumb>              <Content style={{ background: '#fff', padding: 24, margin: 0, minHeight: 280 }}>                <Router>                  <div>                    <ul>                      <li><Link to="/">首页</Link></li>                      <li><Link to="/about">关于</Link></li>                      <li><Link to="/topics">主题列表</Link></li>                    </ul>                    <hr/>                    <Route exact path="/" component={Home}/>                    <Route path="/about" component={About}/>                    <Route path="/topics" component={Topics}/>                  </div>                </Router>              </Content>            </Layout>          </Layout>      </Layout>      </div>    );  }}export default App;